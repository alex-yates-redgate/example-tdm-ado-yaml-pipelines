name: redgate-subset-image-example
 
schedules:
- cron: 0 3 * * * # cron syntax for 3am daily
  branches:
    include: 
    - main
  displayName: 3am daily # friendly name given to a specific schedule

trigger: none

parameters:
- name: serverinstance
  default: "WIN2016"
- name: databaseName
  default: "Eastwind"
- name: backupDir
  default: 'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\Backup'

stages:
  - stage: Subset  
    displayName: Subset
    jobs:
    - job: ${{parameters.databaseName}}
      displayName: Subset ${{parameters.databaseName}}

      steps:
      - powershell: |
          $backupDir = "${{parameters.backupDir}}"
          $databaseName = "${{parameters.databaseName}}"
          $mostRecentBackup = (Get-ChildItem -Path $backupDir | Where-Object {$_.Name -like "*$databaseName*"} | Sort-Object -Descending -Property LastWriteTime)[0]
          $backupPath = "${backupDir}\\$mostRecentBackup"
          Write-Output "Most recent backup for $databaseName is: $backupPath"

          import-module dbatools
          Restore-DbaDatabase -SqlInstance ${{parameters.serverinstance}} -Path "$backupPath" -DatabaseName "${{parameters.databaseName}}_FullRestore" -DestinationFileSuffix "_FullRestore"
        displayName: 'Restore backup'
      - powershell: |
          # Create a DBCC clone of the source DB
          $sourceDb = "${{parameters.databaseName}}_FullRestore"
          $targetDb = "${{parameters.databaseName}}_Subset"
          $sql = "DBCC CLONEDATABASE ( $sourceDb , $targetDb ); ALTER DATABASE $targetDb SET READ_WRITE WITH ROLLBACK IMMEDIATE;"

          import-module dbatools
          Invoke-DbaQuery -SqlInstance ${{parameters.serverinstance}} -Query $sql
        displayName: 'Create target for subset'
      - powershell: |
          Write-Output "To do: Run subset"
        displayName: 'Run subset'
      - powershell: |
          $subsetDb = "${{parameters.databaseName}}_Subset"
          
          import-module dbatools
          Backup-DbaDatabase -SqlInstance ${{ parameters.serverinstance }} -Database $subsetDb
        displayName: 'Backup target'
      - powershell: |
          # Delete both staging databases
          $sourceDb = "${{parameters.databaseName}}_FullRestore"
          $subsetDb = "${{parameters.databaseName}}_Subset"
          $sql = "DROP Database $sourceDb; DROP Database $subsetDb;"
          import-module dbatools
          Invoke-DbaQuery -SqlInstance ${{parameters.serverinstance}} -Query $sql
        displayName: 'Clean up'

  - stage: CreateImage  
    displayName: Create Image
    jobs:
    - job: ${{parameters.databaseName}}
      displayName: Create rgclone image for ${{parameters.databaseName}}

      steps:
      - powershell: |
          Write-Output "To do: Copy backup to fileshare"
        displayName: 'Copy backup to file share'
      - powershell: |
          Write-Output "To do: Create rgclone data image"
        displayName: 'Create rgclone data image'